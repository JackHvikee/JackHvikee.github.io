{"meta":{"title":"被雪天困住的大孩子","subtitle":"日が落ちるまで","description":null,"author":"Jack","url":"http://boyinsnow.xyz","root":"/"},"pages":[{"title":"archives","date":"2019-09-03T00:35:23.000Z","updated":"2019-09-03T00:35:23.059Z","comments":true,"path":"archives/index.html","permalink":"http://boyinsnow.xyz/archives/index.html","excerpt":"","text":""},{"title":"categories","date":"2019-09-03T00:34:58.000Z","updated":"2019-10-10T14:34:21.415Z","comments":true,"path":"categories/index.html","permalink":"http://boyinsnow.xyz/categories/index.html","excerpt":"","text":""},{"title":"About what?","date":"2019-09-03T00:34:07.000Z","updated":"2019-09-03T14:32:30.620Z","comments":true,"path":"about/index.html","permalink":"http://boyinsnow.xyz/about/index.html","excerpt":"","text":"10/18 1999. A boy."},{"title":"Favorite","date":"2019-09-03T00:34:30.000Z","updated":"2020-05-03T00:45:53.848Z","comments":true,"path":"favorite/My.html","permalink":"http://boyinsnow.xyz/favorite/My.html","excerpt":"","text":"Yan"},{"title":"tags","date":"2019-09-03T00:33:49.000Z","updated":"2019-10-10T14:34:08.621Z","comments":true,"path":"tags/index.html","permalink":"http://boyinsnow.xyz/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"The other way to use con/destructor","slug":"posts08","date":"2021-04-11T13:16:44.000Z","updated":"2021-04-14T04:39:58.742Z","comments":true,"path":"posts08.html","link":"","permalink":"http://boyinsnow.xyz/posts08.html","excerpt":"","text":"Classes that unallowed to Copy If you wanna simulate a country and you can just get a president, and President class will be in danger! 1234President ourPresident;DoSomething(ourPresident);//duplicate created in passing by valuePresident clone;clone = ourPresident; //duplicate via assignmant Obviously, you should avoid this situation. To ban the copy of class, you can declare a Privative Copy constructor, which make sure the ‘DoSomething(OurPresident)’ can’t pass the compile. To ban assignment, you can declare a Privative assignment operator. So, the follow can solve: 1234567class President&#123; private: President(const President&amp;); President &amp; operator = (const President&amp;); &#125; Above but has a shortage: You can’t instantiatiate multiple objects to create multiple presidents. 1President One,Two,Three; owing to the privative copy constructor, every object is not copyable，buy ours goal is make sure President class has and only has one embodiment. Once you got one President object, creating others President objects are banned. Then you need ‘Static’ Used for class’ data members, it will be shared in all instance. For local variable in a func, the variable will not change between twice call For member funcs(methods), the method is shared in all member funcs. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include&lt;iostream&gt;#include&lt;string&gt;using namespace std;class President&#123; private: President() &#123;&#125;; //default constructor President(const President&amp;);//copy constructor const President&amp; operator=(const President&amp;);//assignment operator string name; public: static President&amp; GetInstance() &#123; static President onlyInstance; return onlyInstance; &#125; string GetName() &#123; return name; &#125; void SetName(string InputName) &#123; name = InputName; &#125; &#125;;int main()&#123; President&amp; onlyPresident = President::GetInstance; onlyPresident.SetName('JackHvikee'); //President second; //cannot access constructor //President* third = new President();//cannot access constructor //President fourth = onlyInstance;//cannot access copy constructor //onlyInstance = President::GetInstance(); cannot access operator'=' cout &lt;&lt; \"The name of the President is: \"; cout &lt;&lt; President::GetInstance().GetName() &lt;&lt; endl; return 0;&#125; OutPut: ​ The name of the President is: JackHvikee Class that not allowed to be instanced in Stack The space of stack is limited. If you wanna write a database class, and it contains serveral TB data, maybe you should prohibit instancing it in stack, but instant it in free storage area. So, the key step is make sure destructor is Privative. 123456789101112class MonsterDB&#123; private: ~MonsterDB(); //private destructor&#125;;//and you can't create instance like this:int main()&#123; MonsterDB myDatabase;//create instance in stack; return 0;&#125; Above codes try to create instance in stack. When back stack there will popup all objects in stack, So compiler need invoke destructor ‘~MonsterDB’ in the end of ‘main()’, but the destructor is privative, i.e. not available, so above statements will result in compile error. Declaring a destructor private does not prohibit the instantiation in the heap: 123456int main()&#123; MonsterDB* myDatabase = new MonsterDB();//no error cause in the heap. return 0;&#125; Above codes will result in memory leak. You can’t invoke destructor in the main() func, so you can’t invoke ‘delete’. You need provide a static public func which could destroy instance (As class member, it can invoke destructor). 1234567891011121314151617181920212223242526class MonsterDB&#123; private: ~MonsterDB() &#123; &#125;; public: static void DestoryInstance(MonterDB* pInstance) &#123; delete pInstance; //member can invoke private destructor &#125; void DoSomething()&#123;&#125;;&#125;;int main()&#123; MonsterDB* myDB = new MonsterDB();//on heap myDB-&gt;DoSomething(); //delete myDB; //Private destructor cannot be invoked //use static member to release memory MonsterDB::DestoryInstance(myDB); return 0;&#125;","categories":[{"name":"c++","slug":"c","permalink":"http://boyinsnow.xyz/categories/c/"}],"tags":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/tags/school/"}]},{"title":"move constructor","slug":"posts07","date":"2021-04-11T12:21:44.000Z","updated":"2021-04-11T13:06:29.549Z","comments":true,"path":"posts07.html","link":"","permalink":"http://boyinsnow.xyz/posts07.html","excerpt":"","text":"In some cases, object will be copied automatically: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566class Mystring&#123; private: char* buffer; public: Mystring(const char* inistString) //Constructor &#123; buffer = NULL; cout &lt;&lt; \"Default constructor: creating new MyString\" &lt;&lt; endl; if(initString != NULL) &#123; buffer = new char(strlen(initString) + 1); //Allocating memory strcpy(buffer, initString); cout &lt;&lt; \"buffer points to: 0X\"&lt;&lt;hex; cout &lt;&lt; (unsigned int*)buffer &lt;&lt;endl; &#125; &#125; MyString(const MyString &amp; copySource)//copy constructor &#123; buffer = NULL; cout &lt;&lt; \"Copy constructor: copying from MyString\" &lt;&lt; endl; if(copySource.buffer != NULL) &#123; //allocate own buffer buffer = new char [strlen(copySource.buffer) + 1]; //deep copy from the source into local buffer strcpy(buffer, copySource.buffer); cout &lt;&lt; \"buffer points to: 0X\" &lt;&lt;hex; cout &lt;&lt; (unsigned int*)buffer &lt;&lt; endl; &#125; &#125; ~Mystring() //Destructor &#123; cout &lt;&lt; \"invoking destructor, clearing up\" &lt;&lt; end; if(buffer != NULL) delete [] buffer; &#125; int GetLength() &#123; return strlen(buffer); &#125; const char* GetString() &#123; return buffer; &#125;&#125;;Mystring Copy(MyString &amp; source) //func&#123; MyString copyForReturn(source.GetString());//create copy return copyForReturn;//reruen by value invokes copy constructor&#125;int main()&#123; MyString sayHello(\"Hello World\"); MyString sayHelloAgain(Copy(sayHello));//invokes 2 times copy constructor return 0;&#125; When instantiating ‘sayHelloAgain’, that will invoke func ‘Copy(sayHello)’, and the func return a MyString by Value, therefore invokes copy constructor twice. But, the value returned exist a short period, and not aviliable outside of the expression. So, it reduced performance. That’s why here comes the Move constructor: 123456789//move constructor syntax:MyString(MyString &amp;&amp; movesorce)&#123; if(movesource.buffer != NULL) &#123; buffer = movesource.buffer; //take ownership movesorce.buffer = NULL; //set the move source to NULL &#125;&#125; This post will be update later.","categories":[{"name":"c++","slug":"c","permalink":"http://boyinsnow.xyz/categories/c/"}],"tags":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/tags/school/"}]},{"title":"Copy Constructor","slug":"posts06","date":"2021-04-05T03:08:44.000Z","updated":"2021-04-09T03:52:40.056Z","comments":true,"path":"posts06.html","link":"","permalink":"http://boyinsnow.xyz/posts06.html","excerpt":"","text":"For a Function Area(), argument passed is copied: 1Double Area(double radius); So, when invoking Area(), argument is copied to parameter ‘radius’, the rule can also be used in ‘object’(instance of class) Shallow copy and its problems There is a ‘new’ and there is a ‘delete’ But now I wanna copy the object, in the same time, we copied its pointer member, but we have no way to copy the buffer area that the pointer pointed, which will result in two objects point one memory allocated dynamically. When you destroy one of them, &lt;delete[]&gt; wile release the memory block, cause the copy of pointer that another object stored invalid. THIS is called Shallow Copy. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748class Mystring &#123; private: char* buffer; public: Mystring(const char* inistString) //Constructor &#123; if(initString != NULL) &#123; buffer = new char(strlen(initString) + 1); //Allocating memory strcpy(buffer, initString); &#125; else buffer = NULL; &#125; ~Mystring() //Destructor &#123; cout &lt;&lt; \"invoking destructor, clearing up\" &lt;&lt; end; if(buffer != NULL) delete [] buffer; &#125; int GetLength() &#123; return strlen(buffer); &#125; const char* GetString() &#123; return buffer; &#125;&#125;;//Use function rather than int funcvoid UseMyString(MyString str)&#123; cout &lt;&lt; \"String buffer in sayHello is \"&lt;&lt; str.GetLength(); cout &lt;&lt; \" characters long\"&lt;&lt; endl; cout &lt;&lt; \"buffer contains: \"&lt;&lt; str.GetString()&lt;&lt;endl; return;&#125;int main()&#123; MyString sayHello(\"Hello from String class\"); UseMyString(sayHello); return 0;&#125; 123456//OutPut:///String buffer in MyString is 23 characters long//buffer contains: Hello from String Class//Invoking destructor, clearing up//Invoking destructor, clearing up//&lt;crash as seen in screen&gt; Make sure deep copy 12345678class MyString&#123; MyString (const MyString&amp; copySource); //copy constructor MyString (const MyString copySource) &#123; //Copy constructor implementation code &#125;&#125; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768class Mystring &#123; private: char* buffer; public: Mystring(const char* inistString) //Constructor &#123; buffer = NULL; cout &lt;&lt; \"Default constructor: creating new MyString\" &lt;&lt; endl; if(initString != NULL) &#123; buffer = new char(strlen(initString) + 1); //Allocating memory strcpy(buffer, initString); cout &lt;&lt; \"buffer points to: 0X\"&lt;&lt;hex; cout &lt;&lt; (unsigned int*)buffer &lt;&lt;endl; &#125; &#125; MyString(const MyString &amp; copySource)//copy constructor &#123; buffer = NULL; cout &lt;&lt; \"Copy constructor: copying from MyString\" &lt;&lt; endl; if(copySource.buffer != NULL) &#123; //allocate own buffer buffer = new char [strlen(copySource.buffer) + 1]; //deep copy from the source into local buffer strcpy(buffer, copySource.buffer); cout &lt;&lt; \"buffer points to: 0X\" &lt;&lt;hex; cout &lt;&lt; (unsigned int*)buffer &lt;&lt; endl; &#125; &#125; ~Mystring() //Destructor &#123; cout &lt;&lt; \"invoking destructor, clearing up\" &lt;&lt; end; if(buffer != NULL) delete [] buffer; &#125; int GetLength() &#123; return strlen(buffer); &#125; const char* GetString() &#123; return buffer; &#125;&#125;;//Use function rather than int funcvoid UseMyString(MyString str)&#123; cout &lt;&lt; \"String buffer in sayHello is \"&lt;&lt; str.GetLength(); cout &lt;&lt; \" characters long\"&lt;&lt; endl; cout &lt;&lt; \"buffer contains: \"&lt;&lt; str.GetString()&lt;&lt;endl; return;&#125;int main()&#123; MyString sayHello(\"Hello from String class\"); UseMyString(sayHello); return 0;&#125; 123456789//Output://Default constructor//buffer points to://copy constructor: copying from MyString//buffer points to://String buffer in MyString is 17 characters long//buffer containsL Hello from String Class//Invoking destructor, clearing up//Invoking destructor, clearing up What you should do: Class contains Primitive pointer menmber(char*), you must write Copy constructor and Copy assignment operator. When writing Copy constructor, you must make the parameter that accept source object is declared as a ‘const’ reference. When declaring constructor you must consider using keyword ‘explicit’, which will avoid implicit conversation. You must declare class members to std::String-like and Smart pointer class(rather than Primitive pointer), cause that the constructor is implemented, which can help you work easier. What you shouldn’t do Do not declare class members as Primitive pointer.","categories":[{"name":"c++","slug":"c","permalink":"http://boyinsnow.xyz/categories/c/"}],"tags":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/tags/school/"}]},{"title":"Destructor","slug":"posts05","date":"2021-04-05T02:27:44.000Z","updated":"2021-04-05T03:07:16.038Z","comments":true,"path":"posts05.html","link":"","permalink":"http://boyinsnow.xyz/posts05.html","excerpt":"","text":"When and how to use destructor? 123456~Mystring()&#123; cout &lt;&lt; \"invoking destructor, clearing up\" &lt;&lt; end; if(buffer != NULL) delete [] buffer;&#125; Whenever an object is out of scope or is deleted via and then destroyed, system call the Destructor. When using &lt;char*&gt; buffer area, you must control the memory allocation and release by yourself, I do not recommend it, instead of using &lt; std::string &gt;, which is class tool, they make the most of Constructor and Destructor. 1234567891011121314151617181920212223242526272829303132333435363738394041class Mystring //When you use &lt;char*&gt;, you can do like this which is similar to &lt;std::String&gt;&#123; private: char* buffer; public: Mystring(const char* inistString) //Constructor &#123; if(initString != NULL) &#123; buffer = new char(strlen(initString) + 1); //Allocating memory strcpy(buffer, initString); &#125; else buffer = NULL; &#125; ~Mystring() //Destructor will be invoked when object is over &#123; cout &lt;&lt; \"invoking destructor, clearing up\" &lt;&lt; end; if(buffer != NULL) delete [] buffer; &#125; int GetLength() &#123; return strlen(buffer); &#125; const char* GetString() &#123; return buffer; &#125;&#125;;int main()&#123; MyString sayHello(\"Hello from String class\"); cout &lt;&lt; \"String buffer in sayHello is \"&lt;&lt; sayHello.GetLength(); cout &lt;&lt; \" characters long\"&lt;&lt; endl; cout &lt;&lt; \"buffer contains: \"&lt;&lt; sayHello.GetString()&lt;&lt;endl;&#125; In this program, you don’t need andin you main function, they are hidden in the String class. Pay attention: Destructor couldn’t be overloaded. If you forget Destructor, compiler will create a dummy destructor and invoke it, but dummy destructor is NULL, which means it can’t release the memory allocated dynamically.","categories":[{"name":"c++","slug":"c","permalink":"http://boyinsnow.xyz/categories/c/"}],"tags":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/tags/school/"}]},{"title":"Constructor","slug":"posts04","date":"2021-04-01T13:37:44.000Z","updated":"2021-04-02T04:37:45.644Z","comments":true,"path":"posts04.html","link":"","permalink":"http://boyinsnow.xyz/posts04.html","excerpt":"","text":"Declaration of Constructor 1234class Human&#123; Human(); //declaration of a constructor&#125;; Implementation of Constructor The first case: Implementation in class 1234567class Human&#123; Human() &#123; //constructor code here &#125;&#125;; The second case: Implementation out class 12345678910class Human&#123; public : Human(); //constructor declaration&#125;;//constructor implementation (definition)Human::Human() //'::': Domain Resolution Operator&#123; //constructor code here&#125; When and How to use Constructor? When creating object, which made constructor a ideal place to initialize class menmber variables to a specific value. When you invoke a function without providing parameters which is called Default Constructor. And the Default Constructor is optional,if you don’t provide one, compiler will creat one for you, it just create member attribute, but not initialize POD type(such int) to a non-zero value. Overload Constructor Like function, Constructor can also Overload.(overload func, the same func, which you can provide different parameter such as you can do not provide or provide a string or int) 1234567891011class Human &#123; Human() &#123; //default constructor code here &#125; Human(string humansName) &#123; //overload constructor code here &#125;&#125; The following program will tell you 123456789101112131415161718192021222324252627282930#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;class Human &#123; private: string name; int age; public: Human() //You can regard this as Setter &#123; age = 0; cout &lt;&lt; \"Default constructor: name and age not Set\" &lt;&lt; endl; &#125; Human(string humansName, int humansAge) //You can regard this as Getter and Setter!!! &#123; name = humansName; age = humansAge; cout &lt;&lt; \"Overload constructor creates\" &lt;&lt; endl; cout &lt;&lt; name &lt;&lt; \" of\" &lt;&lt; age &lt;&lt; \" years\" &lt;&lt; endl; &#125;&#125;;int main()&#123; Human firstMan; //use default constructor Human firstWoman(\"Eve\",20); //use overload constructor&#125; You can choose do not implement Default constructor, so you must provide some parameters when instantiating object. You do not need default constructor and just keep Overload constructor. And it can have default value. 12345678910111213141516Human(string humansName,int humansAge)&#123; //...&#125;Human(string humansName, int humansName = 20)&#123; name = humansName; age = humansAge;&#125;//By the way, overload constructor can cantain initialzation list.Human(string humansName, int humansAge):name(humansName), age(humansAge)&#123; //cout name,age...&#125;","categories":[{"name":"c++","slug":"c","permalink":"http://boyinsnow.xyz/categories/c/"}],"tags":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/tags/school/"}]},{"title":"const -> pointer","slug":"posts03","date":"2021-03-28T13:00:44.000Z","updated":"2021-03-29T01:04:09.519Z","comments":true,"path":"posts03.html","link":"","permalink":"http://boyinsnow.xyz/posts03.html","excerpt":"","text":"Const was used with Pointer. The first case: The address which Pointer contained is a Constant, Can’t be changed, but you can change the Data pointed to: 12345int daysInMonth = 30;int * const pDaysInMonth = &amp;daysInMonth;*pDaysInMonth = 31; //This is ok, Data pointed to can be changedint daysInLunarMonth = 28;pDaysInMonth = &amp;daysInLunarMonth; //This is shit, Cannot change address! The second cace: Data pointed to is Constant, can’t be changed, but you can change the address which Pointer contained, and that means the Pointer can pointer to another variable: 123456int hoursInday = 24; const int* pointsToInt = &amp;housday; int mouthInYear = 12; pointsToInt = &amp;monthsInYear; *pointsToInt = 13; //Not OK! Cannot change data being pointed to int* newPointer = pointsToInt; //Not OK! cannot assign const to non-const The third cace: Both Address that Pointer contains and Variable It pointer to is Constant, cannot be changed.(which is the most rigorous) 12345int hoursInDay = 24;const int* const pHousInDay = &amp;hoursInDay;*pHoursInDay = 25; //Not OK! Cannot change data being pointed toint daysInMonth = 30;pHoursInDay = &amp;daysInMonth; //Not OK! Cannot change address Pass the pointer to the function. When a pointer was used as a function argument, it’s important that Function only can change arguments that you hope to change.For example, when you passed a radius to calculate area of a circle, it can’t be changed. YOU CAN USE CONST. 1234567891011121314151617void CalcArea(const double* const ptrPi, const double* const ptrRadius, double* const ptr Area)//const pointer to const data, no changes allowed, can change data pointed to&#123; if(ptrPi &amp;&amp; ptrRadius &amp;&amp; ptrArea) *ptrArea = (*ptrPi) * (*ptrRadius) * (*ptrRadius); //Pay attention to Product sign 'x' and indirect operater '*'&#125;int main()&#123; const double Pi = 3.14159265358979323846; double radius = 0; cin &gt;&gt; radius; double area = 0; CalcArea (&amp;Pi, &amp;radius, &amp;area); //only area can be changed in func; return 0;&#125;","categories":[{"name":"c++","slug":"c","permalink":"http://boyinsnow.xyz/categories/c/"}],"tags":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/tags/school/"}]},{"title":"dec、hex、oct","slug":"post-posts02","date":"2021-03-28T12:27:12.000Z","updated":"2021-03-28T12:42:56.230Z","comments":true,"path":"post-posts02.html","link":"","permalink":"http://boyinsnow.xyz/post-posts02.html","excerpt":"","text":"cout利用控制符dec、hex、oct分别输出dec、hex、out进制，具体哪个是哪个你查查字典吧～ 123456789101112131415void ()&#123;​ int a = 42;​ cout&lt;&lt;\"a = \"&lt;&lt;a&lt;&lt;endl;​ cout&lt;&lt;hex; //十六进制​ cout&lt;&lt;\"a = \"&lt;&lt;a&lt;&lt;endl;​ cout&lt;&lt;oct; //八进制​ cout&lt;&lt;\"a = \"&lt;&lt;a&lt;&lt;endl;&#125;","categories":[{"name":"c++","slug":"c","permalink":"http://boyinsnow.xyz/categories/c/"}],"tags":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/tags/school/"}]},{"title":"post/posts","slug":"post-posts01","date":"2021-03-24T12:53:12.000Z","updated":"2021-03-28T12:26:45.080Z","comments":true,"path":"post-posts01.html","link":"","permalink":"http://boyinsnow.xyz/post-posts01.html","excerpt":"","text":"想开头好好把c++补一下，嗯就从现在开始吧，这个博客以后不仅仅是记录生活的了。","categories":[{"name":"c++","slug":"c","permalink":"http://boyinsnow.xyz/categories/c/"}],"tags":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/tags/school/"}]},{"title":"2021","slug":"2021","date":"2021-01-01T07:27:37.000Z","updated":"2021-01-01T07:29:14.581Z","comments":true,"path":"2021.html","link":"","permalink":"http://boyinsnow.xyz/2021.html","excerpt":"","text":"New year!!!!!! :3 New begin :3:","categories":[{"name":"feels","slug":"feels","permalink":"http://boyinsnow.xyz/categories/feels/"}],"tags":[]},{"title":"feels3","slug":"feels3","date":"2020-12-24T08:40:48.000Z","updated":"2020-12-24T08:42:37.387Z","comments":true,"path":"feels3.html","link":"","permalink":"http://boyinsnow.xyz/feels3.html","excerpt":"","text":"Don’t meet what you just have done..","categories":[{"name":"feels","slug":"feels","permalink":"http://boyinsnow.xyz/categories/feels/"}],"tags":[]},{"title":"feels2","slug":"feels2","date":"2020-12-19T09:36:01.000Z","updated":"2020-12-19T09:42:59.796Z","comments":true,"path":"feels2.html","link":"","permalink":"http://boyinsnow.xyz/feels2.html","excerpt":"","text":"It’s getting so clear that most people don’t get the point why they are here, and they even don’t know how to change the situation that they are facing, maybe including myself, I try to make things simple and remember the truly feels when I was new here, because I know that’s the first and the most thing approach to your heart. Need speaking out, and spead your voice&amp;true feels.","categories":[{"name":"feels","slug":"feels","permalink":"http://boyinsnow.xyz/categories/feels/"}],"tags":[]},{"title":"feels","slug":"feels","date":"2020-12-15T11:10:48.000Z","updated":"2020-12-15T11:14:59.905Z","comments":true,"path":"feels.html","link":"","permalink":"http://boyinsnow.xyz/feels.html","excerpt":"","text":"有点累，不知道在忙啥 what I am busy for","categories":[{"name":"feels","slug":"feels","permalink":"http://boyinsnow.xyz/categories/feels/"}],"tags":[]},{"title":"JK","slug":"JK","date":"2020-10-07T01:19:37.000Z","updated":"2020-10-07T01:20:34.320Z","comments":true,"path":"JK.html","link":"","permalink":"http://boyinsnow.xyz/JK.html","excerpt":"","text":"JK is on its way…","categories":[{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/categories/uni/"}],"tags":[{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/tags/uni/"}]},{"title":"3months","slug":"3month","date":"2020-09-01T23:49:39.000Z","updated":"2020-09-02T00:28:42.954Z","comments":true,"path":"3month.html","link":"","permalink":"http://boyinsnow.xyz/3month.html","excerpt":"","text":"这次不能随便记点什么了，要认真的记点什么。 当我离开的时候，我去了南阳，在那里住了一个月，第一次和同学合租房子自己买菜锅碗瓢盆，自己做饭自己吃，持续了一个月后，我们离开了爷爷的房子。 此时我来到了南阳镇平县，开始招生环节。 然后我就见到了我们的“同事” 然后我们招生在外15天 然后我们开学了 其中我讲了两节英语公开课，感觉效果还行吸引了大批前来报名的家长。 然后就开始上课。第一节课我对孩子们都很友善，导致后来不是很听话。 中午放学我就去自己带的五年级帮他们盛饭。 小孩子们正在长身体，有时候饭不够我就反馈。 中午午休孩子们也像我们小时候一样总是不睡觉，怎么样都不睡。 下午是我们自己吃饭的时间，大多数是玉米岑子，有时候还没有菜。 晚上则是刀哥（或者和我一起）开黑环节，虽然有时候队友总坑。 然后这一天就这样结束了。 这一个月也就这样结束了。 本来说好一起玩一天再走，然后大家东奔西走就走了。只剩我一人自后。 然后我就在同学的帮助下，来到路边，乘上了公交车，然后就来到了南阳市，接着在同学家住了一晚，第二晚吃了一碗好吃的烩面（肉超多），然后就搭上了21点去合肥的火车，到了合肥就转去苏州。去了苏州自己坐地铁去了区，然后自己坐大巴去了那个古镇上。 然后就是半个月相识的家庭生活。 然后我就又踏上火车来到学校。","categories":[{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/categories/uni/"}],"tags":[{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/tags/uni/"}]},{"title":"日环食","slug":"rihuanshi_","date":"2020-06-21T08:47:15.000Z","updated":"2020-06-21T08:52:09.412Z","comments":true,"path":"rihuanshi_.html","link":"","permalink":"http://boyinsnow.xyz/rihuanshi_.html","excerpt":"","text":"This all my life can see","categories":[{"name":"sky","slug":"sky","permalink":"http://boyinsnow.xyz/categories/sky/"}],"tags":[{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/tags/uni/"}]},{"title":"Space!","slug":"Space","date":"2020-06-03T05:55:28.000Z","updated":"2020-06-03T06:24:07.777Z","comments":true,"path":"Space.html","link":"","permalink":"http://boyinsnow.xyz/Space.html","excerpt":"","text":"在大疫蔓延的土地上，在种族问题引起的骚乱中，载人宇宙飞船驶向太空。一幅壮丽和悲惨共生、自豪和愤怒交织的画面。特别富于象征意义：天灾人祸都不能阻止人类科技的脚步。迈向太空的探索，能否提供解决人间世种种苦难的钥匙？","categories":[],"tags":[]},{"title":"HEXO Username&password Forced Solution","slug":"h2","date":"2020-05-06T06:09:32.000Z","updated":"2020-05-09T09:24:35.792Z","comments":true,"path":"h2.html","link":"","permalink":"http://boyinsnow.xyz/h2.html","excerpt":"","text":"Today morning I got an idea that maybe I can change my blog’s theme to something good-looking, so I looked at a theme that makes me happy with it. And I cloned it into my blog and when I was trying to make it work, problems show.1 I can’t Hexo g -d directly because of some access problem.2 I must type in my Github username&amp;password every when I type hexo g -d.Error: Permission denied (publickey). fatal: Could not read from remote repository.Solution:First, Generate publickey for root: sudo ssh-keygen -t rsa -C &quot;your mailbox&quot;, the corresponding path is /var/root/.sshThen, Extract the public key information and configure it to github. The problem is again, the root folder under / var is not accessible in the UI interface. We can bypass this problem by sudo cat /var/root/.ssh/id_rsa.pub. And, all is well. Thx to this blog","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://boyinsnow.xyz/categories/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://boyinsnow.xyz/tags/hexo/"},{"name":"solution","slug":"solution","permalink":"http://boyinsnow.xyz/tags/solution/"}]},{"title":"青年节快乐","slug":"7-3 copy","date":"2020-05-04T15:48:48.000Z","updated":"2020-05-09T09:10:08.440Z","comments":true,"path":"7-3 copy.html","link":"","permalink":"http://boyinsnow.xyz/7-3 copy.html","excerpt":"","text":"青年节快乐 迟了23小时45分钟的祝福:)","categories":[{"name":"wintert","slug":"wintert","permalink":"http://boyinsnow.xyz/categories/wintert/"}],"tags":[{"name":"2020","slug":"2020","permalink":"http://boyinsnow.xyz/tags/2020/"}]},{"title":"7/3","slug":"7-3","date":"2020-03-07T15:09:48.000Z","updated":"2020-05-09T09:31:03.799Z","comments":true,"path":"7-3.html","link":"","permalink":"http://boyinsnow.xyz/7-3.html","excerpt":"","text":"When I wrote down this words, It’s 23:13, I don’t know","categories":[{"name":"wintert","slug":"wintert","permalink":"http://boyinsnow.xyz/categories/wintert/"}],"tags":[{"name":"2020","slug":"2020","permalink":"http://boyinsnow.xyz/tags/2020/"}]},{"title":"nomoreicant","slug":"nomoreicant","date":"2020-02-13T13:04:10.000Z","updated":"2020-05-09T09:29:50.143Z","comments":true,"path":"nomoreicant.html","link":"","permalink":"http://boyinsnow.xyz/nomoreicant.html","excerpt":"","text":"it’s a good begining that all we can do just walk around in our home. Looking at the dark night sky and counting our shining stars.I bought a camera that cost all my money, I have my dreams that is standing so high, which I can’t touch them then.I wanna make things back to the past, to the moment when we are a child, standing in there,over hill and dale was glass, behand your head the sky was dark blue and the parents were young…Somebody often forgot where they are from then where they wanna go, they just follow the direction people forward.I wanna say something to the boy who got his dreams in arms,do not forget the feelings when you find a thing you like, do not get involved in others thought, maybe uh-huh,they are right in some ways,but you can’t be influnced by these guys. And, you can stay the point where you are,but you can’t just stay there all the time.","categories":[{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/categories/uni/"}],"tags":[{"name":"some feelings","slug":"some-feelings","permalink":"http://boyinsnow.xyz/tags/some-feelings/"}]},{"title":"aaaaaa","slug":"aaaaaa","date":"2019-12-25T04:19:12.000Z","updated":"2020-05-07T14:11:25.814Z","comments":true,"path":"aaaaaa.html","link":"","permalink":"http://boyinsnow.xyz/aaaaaa.html","excerpt":"","text":"","categories":[],"tags":[{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/tags/uni/"}]},{"title":"Good night","slug":"aaaa","date":"2019-12-15T15:53:53.000Z","updated":"2020-05-09T09:26:12.274Z","comments":true,"path":"aaaa.html","link":"","permalink":"http://boyinsnow.xyz/aaaa.html","excerpt":"","text":"Now it’s a big mistake I have made just now, I wanna to be a better myself, don’t know where to start? Follow me.","categories":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/categories/school/"}],"tags":[{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/tags/uni/"}]},{"title":"It's been a long time...","slug":"aaa","date":"2019-12-12T02:57:24.000Z","updated":"2020-05-09T09:25:39.102Z","comments":true,"path":"aaa.html","link":"","permalink":"http://boyinsnow.xyz/aaa.html","excerpt":"","text":"It’s been a long time no posts on Hexo, it’s like a freshman’s gone in a blink of an eye. I don’t knnow what I did in the half year, actually, this is not what I want, I can’t spend my life like this. especially college. I should learn, try, afraid of nothing at all. So, come on man.","categories":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/categories/school/"}],"tags":[{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/tags/uni/"},{"name":"Time","slug":"Time","permalink":"http://boyinsnow.xyz/tags/Time/"}]},{"title":"ai","slug":"ai","date":"2019-11-08T13:49:24.000Z","updated":"2020-05-09T09:26:53.344Z","comments":true,"path":"ai.html","link":"","permalink":"http://boyinsnow.xyz/ai.html","excerpt":"","text":"I don’t know what made me","categories":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/categories/school/"}],"tags":[{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/tags/uni/"},{"name":"Time","slug":"Time","permalink":"http://boyinsnow.xyz/tags/Time/"}]},{"title":"HTML2","slug":"hahah","date":"2019-10-12T10:48:13.000Z","updated":"2020-05-09T09:29:25.796Z","comments":true,"path":"hahah.html","link":"","permalink":"http://boyinsnow.xyz/hahah.html","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;My page2&lt;/title&gt;&lt;meta charset=\"utf-8\"&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;&lt;a href=\"https://jackhvikee.github.io/\"&gt;This is my blog&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li type=\"circle\"&gt;咖啡&lt;/li&gt;&lt;li type=\"circle\"&gt;牛奶&lt;/li&gt;&lt;/ul&gt;&lt;ol&gt;&lt;li type=\"square\"&gt;咖啡&lt;/li&gt;&lt;li type=\"square\"&gt;牛奶&lt;/li&gt;&lt;br&gt;&lt;li type=\"a\"&gt;牛奶&lt;/li&gt;&lt;li type=\"a\"&gt;咖啡&lt;/li&gt;&lt;li type=\"a\"&gt;橙汁&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;font size=\"4\"&gt;列表第一项第一项定义和描述&lt;br&gt;列表第二项第二项定义和描述&lt;/font&gt;&lt;/pre&gt;&lt;h3&gt;一个嵌套列表：&lt;/h3&gt; &lt;ul&gt;&lt;li&gt;咖啡&lt;/li&gt;&lt;li&gt;茶&lt;ul type=\"circle\"&gt;&lt;li&gt;红茶&lt;/li&gt;&lt;li&gt;绿茶&lt;ul type=\"sqare\"&gt;&lt;li&gt;中国茶&lt;/li&gt;&lt;li&gt;非洲茶&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;牛奶&lt;/li&gt;&lt;/ul&gt;&lt;table border=\"2\" cellpadding=\"40\" width=\"500\" align=\"center\"&gt;&lt;tr&gt;&lt;td bgcolor=\"green\"&gt;1.1&lt;/th&gt;&lt;td bgcolor=\"red\"&gt;1.2&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td bgcolor=\"blue\"&gt;2.1&lt;/th&gt;&lt;td bgcolor=\"yellow\"&gt;2.2&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=\"2\" bgcolor=\"pink\"&gt;合并呀呀呀呀呀呀呀呀😀😀😆😆🥰🥰&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;&lt;table border=\"2\" cellpadding=\"50\" width=\"500\" align=\"center\"&gt;&lt;tr&gt;&lt;td colspan=\"2\"&gt;&lt;/td&gt;&lt;td rowspan=\"2\"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td rowspan=\"2\"&gt;&lt;/td&gt;&lt;td bgcolor=\"green\"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan=\"2\"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;br&gt;&lt;table border=\"2\" cellpadding=\"13\" width=\"800\" align=\"center\"&gt;&lt;tr&gt;&lt;th colspan=\"7\"&gt;课程表&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;时间&lt;/th&gt;&lt;th&gt;节次&lt;/th&gt;&lt;th&gt;星期一&lt;/th&gt;&lt;th&gt;星期二&lt;/th&gt;&lt;th&gt;星期三&lt;/th&gt;&lt;th&gt;星期四&lt;/th&gt;&lt;th&gt;星期五&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th rowspan=\"2\"&gt;上午&lt;/th&gt;&lt;th bgcolor=\"green\"&gt;第1～2节&lt;/th&gt;&lt;th bgcolor=\"green\"&gt;网页制作&lt;/th&gt;&lt;th bgcolor=\"green\"&gt;C语言&lt;/th&gt;&lt;th&gt;数据结构&lt;/th&gt;&lt;th bgcolor=\"red\"&gt;C语言&lt;/th&gt;&lt;th bgcolor=\"red\"&gt;网页制作&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;第3～4节&lt;/th&gt;&lt;th bgcolor=\"green\"&gt;网页制作&lt;/th&gt;&lt;th&gt;高等数学&lt;/th&gt;&lt;th bgcolor=\"red\"&gt;数据结构&lt;/th&gt;&lt;th&gt;大学英语&lt;/th&gt;&lt;th&gt;网页制作&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;下午&lt;/th&gt;&lt;th&gt;第5～6节&lt;/th&gt;&lt;th bgcolor=\"green\"&gt;网页制作&lt;/th&gt;&lt;th&gt;C语言&lt;/th&gt;&lt;th bgcolor=\"red\"&gt;数据结构&lt;/th&gt;&lt;th&gt;C语言&lt;/th&gt;&lt;th&gt;网页制作&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;晚上&lt;/th&gt;&lt;th&gt;思念TC&lt;/th&gt;&lt;th bgcolor=\"green\"&gt;思念TC&lt;/th&gt;&lt;th&gt;思念TC&lt;/th&gt;&lt;th bgcolor=\"red\"&gt;思念TC&lt;/th&gt;&lt;th&gt;思念TC&lt;/th&gt;&lt;th&gt;思念TC&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;深夜&lt;/th&gt;&lt;th&gt;梦进TC&lt;/th&gt;&lt;th bgcolor=\"green\"&gt;梦进TC&lt;/th&gt;&lt;th&gt;梦进TC&lt;/th&gt;&lt;th&gt;梦进TC&lt;/th&gt;&lt;th bgcolor=\"red\"&gt;梦进TC&lt;/th&gt;&lt;th bgcolor=\"red\"&gt;梦进TC&lt;/th&gt;&lt;/tr&gt; &lt;/table&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;!-- &lt;table border=\"1\" width=\"500\"&gt;&lt;tr&gt;&lt;th&gt;Month&lt;/th&gt;&lt;th&gt;Savings&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;January&lt;/td&gt;&lt;td&gt;$100&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; --&gt;&lt;/ul&gt;&lt;/body&gt;&lt;/html&gt; It’s so so weird…","categories":[{"name":"html","slug":"html","permalink":"http://boyinsnow.xyz/categories/html/"}],"tags":[{"name":"html","slug":"html","permalink":"http://boyinsnow.xyz/tags/html/"}]},{"title":"HTML","slug":"posthtml","date":"2019-10-12T08:14:03.000Z","updated":"2020-06-03T05:55:54.706Z","comments":true,"path":"posthtml.html","link":"","permalink":"http://boyinsnow.xyz/posthtml.html","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;My page1&lt;/title&gt;&lt;meta charset=\"utf-8\"&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;哈哈哈哈哈哈哈&lt;/p&gt;&lt;p&gt;呵呵呵呵呵呵呵呵&lt;/p&gt;&lt;p&gt;内容一内容二内容三&lt;/p&gt;&lt;pre&gt;&lt;small&gt; 内容一&lt;/small&gt;&lt;small&gt;内容二&lt;/small&gt;&lt;small&gt;内容三&lt;/small&gt;&lt;/pre&gt;&lt;p&gt;&lt;b&gt;粗体字&lt;br&gt;当然也是粗体字啦哈哈哈哈哈哈哈哈&lt;/b&gt;&lt;br&gt;&lt;big&gt;大号字体&lt;/big&gt;&lt;br&gt;&lt;small&gt;小号字体&lt;/small&gt;&lt;br&gt;&lt;u&gt;下划线&lt;/u&gt;&lt;br&gt;Fe&lt;sub&gt;2&lt;/sub&gt;SO&lt;sub&gt;4&lt;/sub&gt;硫酸亚铁 &lt;/p&gt;&lt;h1&gt;无题&lt;/h1&gt;&lt;h2&gt;作者：李商隐【唐代】&lt;/h2&gt;&lt;h3&gt;相见时难别亦难，东风无力百花残。&lt;/h3&gt;&lt;h4&gt;春蚕到死丝方尽，蜡炬成灰泪始干。&lt;/h4&gt;&lt;h5&gt;晓镜但愁云鬓改，夜吟应觉月光寒。&lt;/h5&gt;&lt;h6&gt;蓬山此去无多路，青岛殷勤为探看。&lt;/h6&gt;&lt;h4&gt;长风破浪会有时，直挂云帆&lt;br&gt;济沧海。&lt;hr&gt;&lt;/h4&gt;&lt;h1&gt;&lt;font color=\"red\" size=\"15\"&gt;内容&lt;/font&gt;&lt;/h1&gt;&lt;p&gt;&lt;big&gt;&lt;b&gt;标题1&lt;/b&gt;&lt;/big&gt;&lt;/p&gt;&lt;p align=\"right\"&gt;&lt;big&gt;&lt;b&gt;标题2&lt;/b&gt;&lt;/big&gt;&lt;/p&gt;&lt;p align=\"center\"&gt;&lt;big&gt;&lt;b&gt;标题3&lt;/b&gt;&lt;/big&gt;&lt;/p&gt;&lt;p&gt;&lt;hr align=\"center\" width=\"50%\" color=\"blue\" /&gt;&lt;hr size=\"10\" color=\"red\" /&gt;&lt;hr size=\"10\" color=\"orange\" /&gt;&lt;hr size=\"10\" color=\"yellow\" /&gt;&lt;hr size=\"10\" color=\"green\" /&gt;&lt;hr size=\"10\" color=\"cyan\" /&gt;&lt;hr size=\"10\" color=\"blue\" /&gt;&lt;hr size=\"10\" color=\"purple\" /&gt;&lt;/p&gt;&lt;h2 align=\"center\"&gt;&lt;font size=\"6\"&gt;无题&lt;/font&gt;&lt;/h2&gt;&lt;h2 align=\"center\"&gt;作者：李商隐【唐代】&lt;/h2&gt;&lt;h4 align=\"center\"&gt;&lt;b&gt;相见时难别亦难，东风无力百花残。&lt;/b&gt;&lt;/h4&gt;&lt;h5 align=\"center\"&gt;&lt;b&gt;春蚕到死丝方尽，蜡炬成灰泪始干。&lt;/b&gt;&lt;/h5&gt;&lt;/body&gt;&lt;/html&gt; It’s so weird…","categories":[{"name":"html","slug":"html","permalink":"http://boyinsnow.xyz/categories/html/"}],"tags":[{"name":"html","slug":"html","permalink":"http://boyinsnow.xyz/tags/html/"}]},{"title":"国庆呢","slug":"‘nig’","date":"2019-10-06T16:21:23.000Z","updated":"2020-05-09T09:25:09.242Z","comments":true,"path":"‘nig’.html","link":"","permalink":"http://boyinsnow.xyz/‘nig’.html","excerpt":"","text":"晚安","categories":[],"tags":[{"name":"学校","slug":"学校","permalink":"http://boyinsnow.xyz/tags/学校/"}]},{"title":"ASCII","slug":"ha","date":"2019-10-04T16:15:42.000Z","updated":"2020-05-09T09:27:55.344Z","comments":true,"path":"ha.html","link":"","permalink":"http://boyinsnow.xyz/ha.html","excerpt":"","text":"12345678910111213141516171819202122//怎么给字母按照ASCII码大小来排序#include&lt;stdio.h&gt;int main()&#123;char a,b,c;while(scanf(\" %c%c%c\",&amp;a,&amp;b,&amp;c)!=EOF) //加个空格，第二个也一样&#123;if((a&lt;b)&amp;&amp;(b&lt;c))printf(\"%c %c %c\\n\",a,b,c);if((a&lt;c)&amp;&amp;(c&lt;b))printf(\"%c %c %c\\n\",a,c,b);if((b&lt;a)&amp;&amp;(a&lt;c))printf(\"%c %c %c\\n\",b,a,c);if((b&lt;c)&amp;&amp;(c&lt;a))printf(\"%c %c %c\\n\",b,c,a);if((c&lt;a)&amp;&amp;(a&lt;b))printf(\"%c %c %c\\n\",c,a,b);if((c&lt;b)&amp;&amp;(b&lt;a))printf(\"%c %c %c\\n\",c,b,a);&#125;return 0;&#125;","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://boyinsnow.xyz/tags/C/"}]},{"title":"Right here","slug":"postguoqing","date":"2019-10-03T08:18:51.000Z","updated":"2020-05-09T09:30:12.501Z","comments":true,"path":"postguoqing.html","link":"","permalink":"http://boyinsnow.xyz/postguoqing.html","excerpt":"","text":"Write down some tips about for loop. 123456789101112131415161718192021#include&lt;stdio.h&gt;int main()&#123;int T,flag=0;scanf(\"%d\", &amp;T);while(T--)&#123;if(flag==1) printf(\"\\n\");else flag=1;int n,i,j;scanf(\"%d\", &amp;n);for(i=1; i&lt;=n; i++)&#123;for(j=i; j&lt;=8; j++)printf(\"%d*%d=%d \", i,j,i*j);//这个分号结束属于上一个for的范畴printf(\"%d*%d=%d\\n\", i,j,i*j);//这个语句不会被循环&#125;&#125;return 0;&#125; ok….Come on! little fish.","categories":[],"tags":[{"name":"C","slug":"C","permalink":"http://boyinsnow.xyz/tags/C/"}]},{"title":"First day of university","slug":"First","date":"2019-09-06T15:08:21.000Z","updated":"2020-05-09T09:27:23.841Z","comments":true,"path":"First.html","link":"","permalink":"http://boyinsnow.xyz/First.html","excerpt":"","text":"Emm……..I really feel that my oral English need some improvement, this is the best evidence！The first day of my university’s life , my father&amp;I walked into the alien place where is too hard for us to confirm our direction. We talked a lot, which will remain forever in our each heart. I love the place&amp;best wishes.","categories":[],"tags":[{"name":"university","slug":"university","permalink":"http://boyinsnow.xyz/tags/university/"}]},{"title":"2019 Hello This Another Blog's Begining La","slug":"hello-world","date":"2019-09-02T13:40:45.920Z","updated":"2020-05-09T09:29:23.030Z","comments":true,"path":"hello-world.html","link":"","permalink":"http://boyinsnow.xyz/hello-world.html","excerpt":"","text":"There are just four days to start school, summarize the summer vacation in this life…..What have I done this summer? Time123456After the college entrance examination, waiting for the resultsChose my favorite university and majorWent to Guangzhou for a summer workCame back...(League of legends)Mac os Mojave installingThen, the hexo If you also wanna make a static blog by using Hexo+GitHub win or mac, which is a easy way to make it, here is the link I’ve followed. If reproduced, please indicate the source. About senior high school’s lifeTwo classes, a older boy which was my hole senior high life.Goodbye guys, goodbye my friend, say goodbye to my&amp;our youth. Move forwardWhatever the life gave you, if you couldn’t accept it, and then you can only choose to change it, whatever, just do what you wanna do&amp;save.","categories":[],"tags":[]}],"categories":[{"name":"c++","slug":"c","permalink":"http://boyinsnow.xyz/categories/c/"},{"name":"feels","slug":"feels","permalink":"http://boyinsnow.xyz/categories/feels/"},{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/categories/uni/"},{"name":"sky","slug":"sky","permalink":"http://boyinsnow.xyz/categories/sky/"},{"name":"Hexo","slug":"Hexo","permalink":"http://boyinsnow.xyz/categories/Hexo/"},{"name":"wintert","slug":"wintert","permalink":"http://boyinsnow.xyz/categories/wintert/"},{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/categories/school/"},{"name":"html","slug":"html","permalink":"http://boyinsnow.xyz/categories/html/"}],"tags":[{"name":"school","slug":"school","permalink":"http://boyinsnow.xyz/tags/school/"},{"name":"uni","slug":"uni","permalink":"http://boyinsnow.xyz/tags/uni/"},{"name":"hexo","slug":"hexo","permalink":"http://boyinsnow.xyz/tags/hexo/"},{"name":"solution","slug":"solution","permalink":"http://boyinsnow.xyz/tags/solution/"},{"name":"2020","slug":"2020","permalink":"http://boyinsnow.xyz/tags/2020/"},{"name":"some feelings","slug":"some-feelings","permalink":"http://boyinsnow.xyz/tags/some-feelings/"},{"name":"Time","slug":"Time","permalink":"http://boyinsnow.xyz/tags/Time/"},{"name":"html","slug":"html","permalink":"http://boyinsnow.xyz/tags/html/"},{"name":"学校","slug":"学校","permalink":"http://boyinsnow.xyz/tags/学校/"},{"name":"C","slug":"C","permalink":"http://boyinsnow.xyz/tags/C/"},{"name":"university","slug":"university","permalink":"http://boyinsnow.xyz/tags/university/"}]}